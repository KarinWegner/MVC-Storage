
@model MainPageViewModel


@{
    ViewData["Title"] = "Index2";
    IEnumerable < ProductIndexViewModel > pModel = Model.ProductViewModel;
    
}

<h1>Index2</h1>

<p>
    <a asp-action="Create">Create New</a>

    <div class="form-group">
   @Html.LabelFor(x => Model.Categories, htmlAttributes: new {@class = "control-label col-md-2"})
   <div class="col-md-5">
       @Html.DropDownListFor(x =>Model.SelectedCategory, new SelectList(Model.Categories, "Value", "Text"), htmlAttributes: new {@class= "form-control", id="Category"})
       @Html.ValidationMessageFor(x => x.SelectedCategory, "", new {@class= "text-danger"})
   </div>
    </div>


    <form asp-action="Search">
        <div class="input-group mb-3">

            <input type="text" class="form-control" name="searchField" placeholder="Search on name" />
            <button class="btn btn-outline-secondary" type="submit"> Search </button>
        </div>
    </form>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductViewModel.FirstOrDefault().Name)
            </th>
            
            <th>
                @Html.DisplayNameFor(model => model.ProductViewModel.FirstOrDefault().Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductViewModel.FirstOrDefault().Count)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductViewModel.FirstOrDefault().Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductViewModel.FirstOrDefault().InventoryValue)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.ProductViewModel)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Count)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.InventoryValue)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
